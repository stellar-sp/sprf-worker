version: "3.4"
services:

  worker1:
    #build:
    #  dockerfile: Dockerfile
    #  context: .
    #  network: host
    image: smart-program/sprf-worker:1
    env_file:
      - .env1
    ports:
      - 5001:5002
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/ipfs-files/:/tmp/ipfs-files/
    restart: always

  redis1:
    image: redis:5

  postgres1:
    image: postgres:9.6
    environment:
      - POSTGRES_DB=sprf
      - POSTGRES_USER=sprf
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - ./pgdata1:/var/lib/postgresql/db

  worker2:
    image: smart-program/sprf-worker:1
    env_file:
      - .env2
    ports:
      - 5002:5002
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/ipfs-files/:/tmp/ipfs-files/
    restart: always

  redis2:
    image: redis:5

  postgres2:
    image: postgres:9.6
    environment:
      - POSTGRES_DB=sprf
      - POSTGRES_USER=sprf
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - ./pgdata2:/var/lib/postgresql/db

  worker3:
    image: smart-program/sprf-worker:1
    env_file:
      - .env3
    ports:
      - 5003:5002
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/ipfs-files/:/tmp/ipfs-files/
    restart: always

  redis3:
    image: redis:5

  postgres3:
    image: postgres:9.6
    environment:
      - POSTGRES_DB=sprf
      - POSTGRES_USER=sprf
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - ./pgdata3:/var/lib/postgresql/db

##################################################################################
## IPFS Cluster ##################################################################
##################################################################################

  ipfs0:
    container_name: ipfs0
    image: ipfs/go-ipfs:release
    ports:
#     - "4001:4001" # ipfs swarm - expose if needed/wanted
      - "5001:5001" # ipfs api - expose if needed/wanted
#     - "8080:8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - ./ipfs-data/ipfs0:/data/ipfs
      
  cluster0:
    container_name: cluster0
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs0
    environment:
      CLUSTER_PEERNAME: cluster0
      CLUSTER_SECRET: ${CLUSTER_SECRET} # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs0/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    ports:
          # Open API port (allows ipfs-cluster-ctl usage on host)
          - "127.0.0.1:9094:9094"
          # The cluster swarm port would need  to be exposed if this container
          # was to connect to cluster peers on other hosts.
          # But this is just a testing cluster.
          # - "9096:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - ./ipfs-data/cluster0:/data/ipfs-cluster

  ipfs1:
    container_name: ipfs1
    image: ipfs/go-ipfs:release
    volumes:
      - ./ipfs-data/ipfs1:/data/ipfs
    ports:
      - "5002:5001"


  cluster1:
    container_name: cluster1
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs1
    environment:
      CLUSTER_PEERNAME: cluster1
      CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs1/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    volumes:
      - ./ipfs-data/cluster1:/data/ipfs-cluster

  ipfs2:
    container_name: ipfs2
    image: ipfs/go-ipfs:release
    volumes:
      - ./ipfs-data/ipfs2:/data/ipfs
    ports:
      - "5003:5001"

  cluster2:
    container_name: cluster2
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs2
    environment:
      CLUSTER_PEERNAME: cluster2
      CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs2/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    volumes:
      - ./ipfs-data/cluster2:/data/ipfs-cluster
